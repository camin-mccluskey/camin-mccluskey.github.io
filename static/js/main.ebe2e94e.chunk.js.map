{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/About.js","Components/Resume.js","Components/Thoughts.js","App.js","registerServiceWorker.js","index.js"],"names":["ReactMarkdown","require","titleSteps","Header","this","props","data","name","occupation","description","city","address","networks","social","map","network","key","href","url","class","className","id","title","steps","loop","wrapper","source","Component","Footer","About","bioHeadline","bioBody","phone","email","resumedownload","Resume","skillmessage","education","school","degree","graduated","work","company","years","skills","toLowerCase","style","width","level","Thoughts","backgroundColor","flexGrow","textAlign","paddingBottom","display","flexDirection","flex","alignItems","justifyContent","username","size","fontSize","paddingTop","onClick","window","location","role","aria-label","App","state","resumeData","ReactGA","initialize","pageview","pathname","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","resume","text","color","Boolean","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebe2e94e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Typical from 'react-typical';\nconst ReactMarkdown = require('react-markdown');\n\nconst titleSteps = [\n  \"Hey!\", 500,\n  \"I'm a developer.\", 1000, \n  \"I'm a traveller.\", 1000,\n  \"I'm Camin.\", 1000,\n]\n\nclass Header extends Component {\n  render() {\n\n    if(this.props.data){\n      var name = this.props.data.name;\n      var occupation= this.props.data.occupation;\n      var description= this.props.data.description;\n      var city= this.props.data.address.city;\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i class={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <header id=\"home\">\n\n      <nav id=\"nav-wrap\">\n\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n         <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n\t         <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n           <li><a className=\"smoothscroll\" href=\"#thoughts\">Thoughts</a></li>\n         </ul>\n\n      </nav>\n\n      <div className=\"row banner\">\n         <div className=\"banner-text\">\n            <Typical\n              className={'responsive-headline'}\n              steps={titleSteps}\n              loop={1}\n              wrapper=\"h1\"\n            />\n            <h3>\n              I'm a {city} based <span>{occupation}</span>.\n              <ReactMarkdown source={description}/>\n            </h3>\n            <hr />\n            <ul className=\"social\">\n               {networks}\n            </ul>\n         </div>\n      </div>\n\n      <p className=\"scrolldown\">\n         <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n      </p>\n\n   </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n\n    if(this.props.data){\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <footer>\n\n     <div className=\"row\">\n        <div className=\"twelve columns\">\n           <ul className=\"social-links\">\n              {networks}\n           </ul>\n\n           <ul className=\"copyright\">\n              <li>&copy; Copyright 2021 Camin McCluskey</li>\n           </ul>\n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n     </div>\n  </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nconst ReactMarkdown = require('react-markdown')\n\nclass About extends Component {\n  render() {\n\n    if(this.props.data){\n      var bioHeadline = this.props.data.bioHeadline;\n      var bioBody = this.props.data.bioBody;\n      var phone= this.props.data.phone;\n      var email = this.props.data.email;\n      var resumeDownload = this.props.data.resumedownload;\n    }\n\n    return (\n      <section id=\"about\">\n      <div className=\"row\">\n         <div className=\"nine columns main-col\">\n            <h2>About Me</h2>\n            <ReactMarkdown source={bioHeadline}/>\n            <ReactMarkdown source={bioBody}/>\n            <ReactMarkdown source=\"If you're a current or future collegue, or you'd like to know more about me and my professional interests you can checkout my [Personal User Manual](https://camin-mccluskey.github.io/personal-user-manual)\" />\n         </div>\n      </div>\n\n   </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nconst ReactMarkdown = require('react-markdown')\n\nclass Resume extends Component {\n  render() {\n\n    if(this.props.data){\n      var skillmessage = this.props.data.skillmessage;\n      var education = this.props.data.education.map(function(education){\n        return <div key={education.school}><h3>{education.school}</h3>\n        <p className=\"info\">{education.degree} <span>&bull;</span><em className=\"date\">{education.graduated}</em></p>\n        <p>{education.description}</p></div>\n      })\n      var work = this.props.data.work.map(function(work){\n        return <div key={work.company}><h3>{work.company}</h3>\n            <p className=\"info\">{work.title}<span>&bull;</span> <em className=\"date\">{work.years}</em></p>\n            <ReactMarkdown source={work.description}/>\n        </div>\n      })\n      var skills = this.props.data.skills.map(function(skills){\n        var className = 'bar-expand '+skills.name.toLowerCase();\n        return <li key={skills.name}><span style={{width:skills.level}}className={className}></span><em>{skills.name}</em></li>\n      })\n    }\n\n    return (\n      <section id=\"resume\">\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1><span>Work</span></h1>\n            <ReactMarkdown source=\"A more comphrensive breakdown of my previous experience is availalbe on [LinkedIn](https://www.linkedin.com/in/camin-mccluskey-06a003116/)\" />\n          </div>\n          <div className=\"nine columns main-col\">\n            {work}\n          </div>\n        </div>\n        <div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1><span>Education</span></h1>\n          </div>\n          <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n              <div className=\"twelve columns\">\n                {education}\n              </div>\n            </div>\n        </div>\n      </div>\n\n      {/* <div className=\"row skill\"> */}\n         {/* <div className=\"three columns header-col\">\n            <h1><span>Skills</span></h1>\n         </div>\n        <div className=\"nine columns main-col\">\n          <p>{skillmessage}</p>\n\t\t\t\t  <div className=\"bars\">\n\t\t\t\t   <ul className=\"skills\">\n\t\t\t\t\t  {skills}\n\t\t\t\t\t  </ul>\n\t\t\t\t  </div>\n\t\t\t  </div>\n      </div> */}\n   </section>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from 'react';\nimport MediumProfile from \"react-medium-profile\";\n\n\nclass Thoughts extends Component {\n  render() {\n    return (\n      <section id=\"thoughts\" style={{backgroundColor: \"white\"}}>\n        <h1 style={{flexGrow:1, textAlign: \"center\", paddingBottom: 50}}>Thoughts</h1>\n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <div style={{flex: 1, textAlign: \"center\", alignItems: \"center\"}}>\n            <h3>My Writing</h3>\n            <div style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",  \n              }}>\n              <MediumProfile username=\"caminmccluskey\" size={50}/>\n            </div>\n          </div>\n          <div style={{flex: 1, textAlign: \"center\"}}>\n            <h3>My Reading List</h3>\n            <div style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",  \n              }}>\n            <p style={{fontSize: 50, paddingTop: 15}}>\n              <a onClick={() => window.location.href=\"https://camin-mccluskey.github.io/reading-list\"}>\n                <span role=\"img\" aria-label=\"books\">📚</span>\n              </a>\n            </p>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Thoughts;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport $ from 'jquery';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport About from './Components/About';\nimport Resume from './Components/Resume';\nimport Thoughts from './Components/Thoughts';\nimport { PopupWidget } from \"react-calendly\";\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      resumeData: {}\n    };\n\n    ReactGA.initialize('UA-110570651-1');\n    ReactGA.pageview(window.location.pathname);\n\n  }\n\n  getResumeData(){\n    $.ajax({\n      url:'/resumeData.json',\n      dataType:'json',\n      cache: false,\n      success: function(data){\n        this.setState({resumeData: data});\n      }.bind(this),\n      error: function(xhr, status, err){\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount(){\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main}/>\n        <About data={this.state.resumeData.main}/>\n        <Resume data={this.state.resumeData.resume}/>\n        <Thoughts/>\n        <Footer data={this.state.resumeData.main}/>\n        <PopupWidget \n          text=\"Let's Chat\"\n          url='https://calendly.com/camin-mccluskey/30min' \n          color='#F06000'\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}